require("dotenv").config({ path: "../.env" });
const { test, expect } = require("@playwright/test");

/*

🐛 When creating a new post, attempting to submit posts with an empty title/body are not throwing an error

Steps to replicate:

1) log in to any account
2) click "Groups", and select any of the listed groups
3) click "submit a new post"
4) click "create post". This step should produce an error, instead it redirects to an empty post

*/

let page, groupIdentifier;

//  Note - use beforeEach when you want to reset the conditions for each test, as opposed to beforeAll
test.beforeEach("create post page navigation", async ({ browser }) => {
  page = await browser.newPage();

  // initialize app, log in
  await page.goto("http://localhost:3000/");
  await page.getByTestId("nav-login").click();

  await page.getByTestId("username").type(process.env.TEST_USER_USERNAME);
  await page.getByTestId("password").type(process.env.TEST_USER_PASSWORD);

  await page.getByTestId("login-btn").click();

  await expect(page).toHaveURL("http://localhost:3000/"); // confirms successful login

  // navigate to groups
  await page.getByTestId("groups-link").click();
  await expect(page).toHaveURL("http://localhost:3000/groups");

  // select first group
  await page.getByTestId("group-link-0").click();
  await expect(page).toHaveURL(/^http:\/\/localhost:3000\/groups\/\d+$/);

  // get group identifier (name)
  groupIdentifier = page
    .url()
    .split("/")
    .slice(-1)[0];

  // navigate to submit a new post form
  await page.getByTestId("create-post-button").click();
  await expect(page).toHaveURL(/^http:\/\/localhost:3000\/create\?group=\d+$/);
});

test("client is prevented from submitting a post with empty title and body", async () => {
  // attempt to submit post without filling in title/body fields
  await page.getByTestId("create-post-btn").click();

  // assert url remains pointing at create post view
  await expect(page).toHaveURL(`http://localhost:3000/create?group=${groupIdentifier}`);
});

test("client is prevented from submitting a post with empty title, body filled in", async () => {
  await page.getByTestId("content").type("test post generated by Playwright");
  await page.getByTestId("create-post-btn").click();

  await expect(page).toHaveURL(`http://localhost:3000/create?group=${groupIdentifier}`);
});

test("client is prevented from submitting a post with empty body, title filled in", async () => {
  await page.getByTestId("title").type("test post");
  await page.getByTestId("create-post-btn").click();

  await expect(page).toHaveURL(`http://localhost:3000/create?group=${groupIdentifier}`);
});
